{
  "quizz": [
    {
      "id": 1,
      "question": "Que retourne la méthode `typeof` lorsqu'elle est appliquée à `null` ?",
      "answers": [
        {
          "id": 1,
          "answer": "\"object\"",
          "correct": true
        },
        {
          "id": 2,
          "answer": "\"null\"",
          "correct": false
        },
        {
          "id": 3,
          "answer": "\"undefined\"",
          "correct": false
        },
        {
          "id": 4,
          "answer": "\"number\"",
          "correct": false
        }
      ]
    },
    {
      "id": 2,
      "question": "Quelle est la différence principale entre `let` et `var` dans le scope de bloc en JavaScript ?",
      "answers": [
        {
          "id": 1,
          "answer": "`let` est limité au bloc dans lequel il est défini, tandis que `var` est globalement ou fonctionnellement accessible.",
          "correct": true
        },
        {
          "id": 2,
          "answer": "`var` est limité au bloc, et `let` est globalement accessible.",
          "correct": false
        },
        {
          "id": 3,
          "answer": "Ils sont identiques dans le scope de bloc.",
          "correct": false
        },
        {
          "id": 4,
          "answer": "`let` est automatiquement global.",
          "correct": false
        }
      ]
    },
    {
      "id": 3,
      "question": "Que fait la méthode `Array.prototype.map()` ?",
      "answers": [
        {
          "id": 1,
          "answer": "Elle crée un nouvel array en appliquant une fonction à chaque élément de l'array d'origine.",
          "correct": true
        },
        {
          "id": 2,
          "answer": "Elle modifie l'array en appliquant une fonction à chaque élément.",
          "correct": false
        },
        {
          "id": 3,
          "answer": "Elle filtre l'array selon une condition donnée.",
          "correct": false
        },
        {
          "id": 4,
          "answer": "Elle trie les éléments de l'array.",
          "correct": false
        }
      ]
    },
    {
      "id": 4,
      "question": "Quelle est la sortie de la console pour le code suivant ?\n\n```javascript\nconsole.log(2 + '2');\n```",
      "answers": [
        {
          "id": 1,
          "answer": "\"22\"",
          "correct": true
        },
        {
          "id": 2,
          "answer": "4",
          "correct": false
        },
        {
          "id": 3,
          "answer": "NaN",
          "correct": false
        },
        {
          "id": 4,
          "answer": "\"2+2\"",
          "correct": false
        }
      ]
    },
    {
      "id": 5,
      "question": "Quel est le résultat de l'expression suivante ?\n\n```javascript\n[] == ![];\n```",
      "answers": [
        {
          "id": 1,
          "answer": "true",
          "correct": true
        },
        {
          "id": 2,
          "answer": "false",
          "correct": false
        },
        {
          "id": 3,
          "answer": "undefined",
          "correct": false
        },
        {
          "id": 4,
          "answer": "SyntaxError",
          "correct": false
        }
      ]
    },
    {
      "id": 6,
      "question": "Quel mot-clé JavaScript permet de créer une promesse ?",
      "answers": [
        {
          "id": 1,
          "answer": "new Promise()",
          "correct": true
        },
        {
          "id": 2,
          "answer": "setTimeout",
          "correct": false
        },
        {
          "id": 3,
          "answer": "async",
          "correct": false
        },
        {
          "id": 4,
          "answer": "callback",
          "correct": false
        }
      ]
    },
    {
      "id": 7,
      "question": "Quelle est la sortie de la console pour le code suivant ?\n\n```javascript\nconst person = { name: 'Alice' };\nperson.age = 25;\nconsole.log(person);\n```",
      "answers": [
        {
          "id": 1,
          "answer": "{ name: 'Alice', age: 25 }",
          "correct": true
        },
        {
          "id": 2,
          "answer": "Erreur : un objet `const` ne peut pas être modifié",
          "correct": false
        },
        {
          "id": 3,
          "answer": "{ name: 'Alice' }",
          "correct": false
        },
        {
          "id": 4,
          "answer": "undefined",
          "correct": false
        }
      ]
    },
    {
      "id": 8,
      "question": "Comment définir une fonction fléchée en JavaScript ?",
      "answers": [
        {
          "id": 1,
          "answer": "const myFunction = () => { ... }",
          "correct": true
        },
        {
          "id": 2,
          "answer": "function => myFunction() { ... }",
          "correct": false
        },
        {
          "id": 3,
          "answer": "myFunction => () { ... }",
          "correct": false
        },
        {
          "id": 4,
          "answer": "const myFunction() => { ... }",
          "correct": false
        }
      ]
    },
    {
      "id": 9,
      "question": "Quel est le rôle de `Promise.all()` en JavaScript ?",
      "answers": [
        {
          "id": 1,
          "answer": "Il retourne une promesse qui résout quand toutes les promesses passées sont résolues.",
          "correct": true
        },
        {
          "id": 2,
          "answer": "Il retourne une promesse qui se résout quand la première promesse est résolue.",
          "correct": false
        },
        {
          "id": 3,
          "answer": "Il crée une seule promesse.",
          "correct": false
        },
        {
          "id": 4,
          "answer": "Il rejette automatiquement toutes les promesses.",
          "correct": false
        }
      ]
    },
    {
      "id": 10,
      "question": "Quelle est la sortie de la console pour le code suivant ?\n\n```javascript\nconsole.log(typeof NaN);\n```",
      "answers": [
        {
          "id": 1,
          "answer": "\"number\"",
          "correct": true
        },
        {
          "id": 2,
          "answer": "\"NaN\"",
          "correct": false
        },
        {
          "id": 3,
          "answer": "\"undefined\"",
          "correct": false
        },
        {
          "id": 4,
          "answer": "\"object\"",
          "correct": false
        }
      ]
    }
  ]
}
